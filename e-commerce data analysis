{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "d93ebfd9",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-08-21T22:25:56.075936Z",
     "iopub.status.busy": "2024-08-21T22:25:56.075436Z",
     "iopub.status.idle": "2024-08-21T22:25:56.956232Z",
     "shell.execute_reply": "2024-08-21T22:25:56.954893Z"
    },
    "papermill": {
     "duration": 0.894365,
     "end_time": "2024-08-21T22:25:56.958651",
     "exception": false,
     "start_time": "2024-08-21T22:25:56.064286",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/e-commerce-customer-for-behavior-analysis/ecommerce_customer_data_large.csv\n",
      "/kaggle/input/e-commerce-customer-for-behavior-analysis/ecommerce_customer_data_custom_ratios.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9946d7d4",
   "metadata": {
    "papermill": {
     "duration": 0.008236,
     "end_time": "2024-08-21T22:25:56.975837",
     "exception": false,
     "start_time": "2024-08-21T22:25:56.967601",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Loading the data \n",
    "We use an e-commerce data set available on Kaggle and store it into a data frame called df. We will also load the required libraries as numpy and pandas."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "28b03c57",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:25:56.995445Z",
     "iopub.status.busy": "2024-08-21T22:25:56.994448Z",
     "iopub.status.idle": "2024-08-21T22:25:58.337388Z",
     "shell.execute_reply": "2024-08-21T22:25:58.336350Z"
    },
    "papermill": {
     "duration": 1.355597,
     "end_time": "2024-08-21T22:25:58.340084",
     "exception": false,
     "start_time": "2024-08-21T22:25:56.984487",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np \n",
    "import pandas as pd \n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9c2ac579",
   "metadata": {
    "papermill": {
     "duration": 0.008634,
     "end_time": "2024-08-21T22:25:58.357818",
     "exception": false,
     "start_time": "2024-08-21T22:25:58.349184",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Data Exploration and preview \n",
    "Once we load our data, we want to explore the data set by knowing its dimensions, summary and preview of the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "22d9dd1b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:25:58.376549Z",
     "iopub.status.busy": "2024-08-21T22:25:58.376160Z",
     "iopub.status.idle": "2024-08-21T22:25:59.341533Z",
     "shell.execute_reply": "2024-08-21T22:25:59.340268Z"
    },
    "papermill": {
     "duration": 0.978177,
     "end_time": "2024-08-21T22:25:59.344535",
     "exception": false,
     "start_time": "2024-08-21T22:25:58.366358",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 250000 entries, 0 to 249999\n",
      "Data columns (total 13 columns):\n",
      " #   Column                 Non-Null Count   Dtype  \n",
      "---  ------                 --------------   -----  \n",
      " 0   Customer ID            250000 non-null  int64  \n",
      " 1   Purchase Date          250000 non-null  object \n",
      " 2   Product Category       250000 non-null  object \n",
      " 3   Product Price          250000 non-null  int64  \n",
      " 4   Quantity               250000 non-null  int64  \n",
      " 5   Total Purchase Amount  250000 non-null  int64  \n",
      " 6   Payment Method         250000 non-null  object \n",
      " 7   Customer Age           250000 non-null  int64  \n",
      " 8   Returns                202618 non-null  float64\n",
      " 9   Customer Name          250000 non-null  object \n",
      " 10  Age                    250000 non-null  int64  \n",
      " 11  Gender                 250000 non-null  object \n",
      " 12  Churn                  250000 non-null  int64  \n",
      "dtypes: float64(1), int64(7), object(5)\n",
      "memory usage: 24.8+ MB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer ID</th>\n",
       "      <th>Purchase Date</th>\n",
       "      <th>Product Category</th>\n",
       "      <th>Product Price</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>Total Purchase Amount</th>\n",
       "      <th>Payment Method</th>\n",
       "      <th>Customer Age</th>\n",
       "      <th>Returns</th>\n",
       "      <th>Customer Name</th>\n",
       "      <th>Age</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>44605</td>\n",
       "      <td>2023-05-03 21:30:02</td>\n",
       "      <td>Home</td>\n",
       "      <td>177</td>\n",
       "      <td>1</td>\n",
       "      <td>2427</td>\n",
       "      <td>PayPal</td>\n",
       "      <td>31</td>\n",
       "      <td>1.0</td>\n",
       "      <td>John Rivera</td>\n",
       "      <td>31</td>\n",
       "      <td>Female</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>44605</td>\n",
       "      <td>2021-05-16 13:57:44</td>\n",
       "      <td>Electronics</td>\n",
       "      <td>174</td>\n",
       "      <td>3</td>\n",
       "      <td>2448</td>\n",
       "      <td>PayPal</td>\n",
       "      <td>31</td>\n",
       "      <td>1.0</td>\n",
       "      <td>John Rivera</td>\n",
       "      <td>31</td>\n",
       "      <td>Female</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>44605</td>\n",
       "      <td>2020-07-13 06:16:57</td>\n",
       "      <td>Books</td>\n",
       "      <td>413</td>\n",
       "      <td>1</td>\n",
       "      <td>2345</td>\n",
       "      <td>Credit Card</td>\n",
       "      <td>31</td>\n",
       "      <td>1.0</td>\n",
       "      <td>John Rivera</td>\n",
       "      <td>31</td>\n",
       "      <td>Female</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>44605</td>\n",
       "      <td>2023-01-17 13:14:36</td>\n",
       "      <td>Electronics</td>\n",
       "      <td>396</td>\n",
       "      <td>3</td>\n",
       "      <td>937</td>\n",
       "      <td>Cash</td>\n",
       "      <td>31</td>\n",
       "      <td>0.0</td>\n",
       "      <td>John Rivera</td>\n",
       "      <td>31</td>\n",
       "      <td>Female</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>44605</td>\n",
       "      <td>2021-05-01 11:29:27</td>\n",
       "      <td>Books</td>\n",
       "      <td>259</td>\n",
       "      <td>4</td>\n",
       "      <td>2598</td>\n",
       "      <td>PayPal</td>\n",
       "      <td>31</td>\n",
       "      <td>1.0</td>\n",
       "      <td>John Rivera</td>\n",
       "      <td>31</td>\n",
       "      <td>Female</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Customer ID        Purchase Date Product Category  Product Price  Quantity  \\\n",
       "0        44605  2023-05-03 21:30:02             Home            177         1   \n",
       "1        44605  2021-05-16 13:57:44      Electronics            174         3   \n",
       "2        44605  2020-07-13 06:16:57            Books            413         1   \n",
       "3        44605  2023-01-17 13:14:36      Electronics            396         3   \n",
       "4        44605  2021-05-01 11:29:27            Books            259         4   \n",
       "\n",
       "   Total Purchase Amount Payment Method  Customer Age  Returns Customer Name  \\\n",
       "0                   2427         PayPal            31      1.0   John Rivera   \n",
       "1                   2448         PayPal            31      1.0   John Rivera   \n",
       "2                   2345    Credit Card            31      1.0   John Rivera   \n",
       "3                    937           Cash            31      0.0   John Rivera   \n",
       "4                   2598         PayPal            31      1.0   John Rivera   \n",
       "\n",
       "   Age  Gender  Churn  \n",
       "0   31  Female      0  \n",
       "1   31  Female      0  \n",
       "2   31  Female      0  \n",
       "3   31  Female      0  \n",
       "4   31  Female      0  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv(\"/kaggle/input/e-commerce-customer-for-behavior-analysis/ecommerce_customer_data_large.csv\")\n",
    "\n",
    "df.info() # get info about count and datatypes\n",
    "df.shape  # returns info on rows and columns\n",
    "df.head() # preview first 4 rows of data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "fd5719e1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:25:59.366594Z",
     "iopub.status.busy": "2024-08-21T22:25:59.365641Z",
     "iopub.status.idle": "2024-08-21T22:25:59.535119Z",
     "shell.execute_reply": "2024-08-21T22:25:59.533798Z"
    },
    "papermill": {
     "duration": 0.182754,
     "end_time": "2024-08-21T22:25:59.537565",
     "exception": false,
     "start_time": "2024-08-21T22:25:59.354811",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Customer ID               49661\n",
       "Purchase Date            249728\n",
       "Product Category              4\n",
       "Product Price               491\n",
       "Quantity                      5\n",
       "Total Purchase Amount      5245\n",
       "Payment Method                3\n",
       "Customer Age                 53\n",
       "Returns                       2\n",
       "Customer Name             39878\n",
       "Age                          53\n",
       "Gender                        2\n",
       "Churn                         2\n",
       "dtype: int64"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check the number of unique rows in each column\n",
    "df.nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d79597b7",
   "metadata": {
    "papermill": {
     "duration": 0.008744,
     "end_time": "2024-08-21T22:25:59.556443",
     "exception": false,
     "start_time": "2024-08-21T22:25:59.547699",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Basic data cleaning\n",
    "Once we have previewed the data, columns and rows,lets start with cleaning and prepping our data for further analysis. We start with checkingif our data has any null values. From the output below, we have null values in the returns column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "617e902a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:25:59.576844Z",
     "iopub.status.busy": "2024-08-21T22:25:59.576034Z",
     "iopub.status.idle": "2024-08-21T22:25:59.643013Z",
     "shell.execute_reply": "2024-08-21T22:25:59.641897Z"
    },
    "papermill": {
     "duration": 0.079816,
     "end_time": "2024-08-21T22:25:59.645514",
     "exception": false,
     "start_time": "2024-08-21T22:25:59.565698",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Customer ID                  0\n",
      "Purchase Date                0\n",
      "Product Category             0\n",
      "Product Price                0\n",
      "Quantity                     0\n",
      "Total Purchase Amount        0\n",
      "Payment Method               0\n",
      "Customer Age                 0\n",
      "Returns                  47382\n",
      "Customer Name                0\n",
      "Age                          0\n",
      "Gender                       0\n",
      "Churn                        0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Count null values\n",
    "null_counts = df.isnull().sum()\n",
    "\n",
    "# Print the counts\n",
    "print(null_counts)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d5ef6b87",
   "metadata": {
    "papermill": {
     "duration": 0.009092,
     "end_time": "2024-08-21T22:25:59.664261",
     "exception": false,
     "start_time": "2024-08-21T22:25:59.655169",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Check for duplicate values\n",
    "Next step of data clenaing is to check whether there are any duplicate values. The output shows that we do not have any duplicate rows."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "8505dd4e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:25:59.685319Z",
     "iopub.status.busy": "2024-08-21T22:25:59.684467Z",
     "iopub.status.idle": "2024-08-21T22:25:59.874442Z",
     "shell.execute_reply": "2024-08-21T22:25:59.873017Z"
    },
    "papermill": {
     "duration": 0.203051,
     "end_time": "2024-08-21T22:25:59.876843",
     "exception": false,
     "start_time": "2024-08-21T22:25:59.673792",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of duplicate rows: 0\n"
     ]
    }
   ],
   "source": [
    "# Check for duplicates\n",
    "duplicates = df.duplicated()\n",
    "\n",
    "# Count the number of duplicates\n",
    "num_duplicates = duplicates.sum()\n",
    "\n",
    "print(\"Number of duplicate rows:\", num_duplicates)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10ddf015",
   "metadata": {
    "papermill": {
     "duration": 0.00898,
     "end_time": "2024-08-21T22:25:59.895311",
     "exception": false,
     "start_time": "2024-08-21T22:25:59.886331",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Data Manipulation\n",
    "Since the return column has null values, we shall replace it with 0 to make it consistent and avoid any errors in our analysis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "1b0fee6b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:25:59.916425Z",
     "iopub.status.busy": "2024-08-21T22:25:59.915432Z",
     "iopub.status.idle": "2024-08-21T22:25:59.925275Z",
     "shell.execute_reply": "2024-08-21T22:25:59.924065Z"
    },
    "papermill": {
     "duration": 0.023086,
     "end_time": "2024-08-21T22:25:59.927855",
     "exception": false,
     "start_time": "2024-08-21T22:25:59.904769",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0         1.0\n",
      "1         1.0\n",
      "2         1.0\n",
      "3         0.0\n",
      "4         1.0\n",
      "         ... \n",
      "249995    0.0\n",
      "249996    1.0\n",
      "249997    0.0\n",
      "249998    1.0\n",
      "249999    0.0\n",
      "Name: Returns, Length: 250000, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "# Mean imputation for column A\n",
    "df['Returns'] = df['Returns'].fillna(0)\n",
    "print(df['Returns'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c9597480",
   "metadata": {
    "papermill": {
     "duration": 0.008984,
     "end_time": "2024-08-21T22:25:59.946309",
     "exception": false,
     "start_time": "2024-08-21T22:25:59.937325",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Format the data\n",
    "Another step of cleaning includes converting the purchase date column into its appropriate format and splitting it to year, month and date for clarity"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "b4bad9d8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:25:59.967499Z",
     "iopub.status.busy": "2024-08-21T22:25:59.966316Z",
     "iopub.status.idle": "2024-08-21T22:26:00.169403Z",
     "shell.execute_reply": "2024-08-21T22:26:00.168256Z"
    },
    "papermill": {
     "duration": 0.216002,
     "end_time": "2024-08-21T22:26:00.171750",
     "exception": false,
     "start_time": "2024-08-21T22:25:59.955748",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Purchase Date</th>\n",
       "      <th>Purchase Year</th>\n",
       "      <th>Purchase Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2023-05-03 21:30:02</td>\n",
       "      <td>2023</td>\n",
       "      <td>May</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2021-05-16 13:57:44</td>\n",
       "      <td>2021</td>\n",
       "      <td>May</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2020-07-13 06:16:57</td>\n",
       "      <td>2020</td>\n",
       "      <td>July</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2023-01-17 13:14:36</td>\n",
       "      <td>2023</td>\n",
       "      <td>January</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2021-05-01 11:29:27</td>\n",
       "      <td>2021</td>\n",
       "      <td>May</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249995</th>\n",
       "      <td>2023-01-24 12:32:18</td>\n",
       "      <td>2023</td>\n",
       "      <td>January</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249996</th>\n",
       "      <td>2021-06-04 05:45:25</td>\n",
       "      <td>2021</td>\n",
       "      <td>June</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249997</th>\n",
       "      <td>2022-11-10 17:11:57</td>\n",
       "      <td>2022</td>\n",
       "      <td>November</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249998</th>\n",
       "      <td>2021-06-27 14:42:12</td>\n",
       "      <td>2021</td>\n",
       "      <td>June</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249999</th>\n",
       "      <td>2020-09-07 05:12:19</td>\n",
       "      <td>2020</td>\n",
       "      <td>September</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>250000 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Purchase Date  Purchase Year Purchase Month\n",
       "0      2023-05-03 21:30:02           2023            May\n",
       "1      2021-05-16 13:57:44           2021            May\n",
       "2      2020-07-13 06:16:57           2020           July\n",
       "3      2023-01-17 13:14:36           2023        January\n",
       "4      2021-05-01 11:29:27           2021            May\n",
       "...                    ...            ...            ...\n",
       "249995 2023-01-24 12:32:18           2023        January\n",
       "249996 2021-06-04 05:45:25           2021           June\n",
       "249997 2022-11-10 17:11:57           2022       November\n",
       "249998 2021-06-27 14:42:12           2021           June\n",
       "249999 2020-09-07 05:12:19           2020      September\n",
       "\n",
       "[250000 rows x 3 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Convert `Purchase Date` dtype to Datetime\n",
    "df['Purchase Date'] = pd.to_datetime(df['Purchase Date'])\n",
    "\n",
    "# Split Year and Month into new columns\n",
    "df['Purchase Year'] = df['Purchase Date'].dt.year\n",
    "df['Purchase Month'] = df['Purchase Date'].dt.month_name()\n",
    "\n",
    "df[['Purchase Date','Purchase Year','Purchase Month']]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c6a62a41",
   "metadata": {
    "papermill": {
     "duration": 0.009396,
     "end_time": "2024-08-21T22:26:00.191589",
     "exception": false,
     "start_time": "2024-08-21T22:26:00.182193",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Check for errors\n",
    "The total purchase amount is wrongly calculated, lets put an accurate formula to calculate the total amount and rename the column as total price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "0d002f65",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:26:00.213591Z",
     "iopub.status.busy": "2024-08-21T22:26:00.213172Z",
     "iopub.status.idle": "2024-08-21T22:26:00.310607Z",
     "shell.execute_reply": "2024-08-21T22:26:00.309489Z"
    },
    "papermill": {
     "duration": 0.11188,
     "end_time": "2024-08-21T22:26:00.313276",
     "exception": false,
     "start_time": "2024-08-21T22:26:00.201396",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 250000 entries, 0 to 249999\n",
      "Data columns (total 14 columns):\n",
      " #   Column            Non-Null Count   Dtype         \n",
      "---  ------            --------------   -----         \n",
      " 0   Customer ID       250000 non-null  int64         \n",
      " 1   Customer Name     250000 non-null  object        \n",
      " 2   Purchase Date     250000 non-null  datetime64[ns]\n",
      " 3   Purchase Year     250000 non-null  int32         \n",
      " 4   Purchase Month    250000 non-null  object        \n",
      " 5   Product Category  250000 non-null  object        \n",
      " 6   Product Price     250000 non-null  int64         \n",
      " 7   Quantity          250000 non-null  int64         \n",
      " 8   Total Price       250000 non-null  int64         \n",
      " 9   Payment Method    250000 non-null  object        \n",
      " 10  Returns           250000 non-null  float64       \n",
      " 11  Gender            250000 non-null  object        \n",
      " 12  Customer Age      250000 non-null  int64         \n",
      " 13  Churn             250000 non-null  int64         \n",
      "dtypes: datetime64[ns](1), float64(1), int32(1), int64(6), object(5)\n",
      "memory usage: 25.7+ MB\n"
     ]
    }
   ],
   "source": [
    "# Re-calculate total purchase amount\n",
    "# Remove incorrect `Total Purchased Amount` column\n",
    "df['Total Price'] = df['Product Price'] * df['Quantity']\n",
    "#df = df.drop(['Total Purchase Amount'], axis=1)\n",
    "\n",
    "# Re-order columns & exclude `Total Purchased Amount` and `Age`\n",
    "cols = ['Customer ID','Customer Name','Purchase Date','Purchase Year','Purchase Month','Product Category','Product Price','Quantity','Total Price','Payment Method','Returns','Gender','Customer Age','Churn']\n",
    "df = df[cols]\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1fc604fa",
   "metadata": {
    "papermill": {
     "duration": 0.009588,
     "end_time": "2024-08-21T22:26:00.333250",
     "exception": false,
     "start_time": "2024-08-21T22:26:00.323662",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Data preview after cleaning and prepping\n",
    "Check the data frame to preview the data once again after we made several changes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "66f57ae1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:26:00.355642Z",
     "iopub.status.busy": "2024-08-21T22:26:00.354587Z",
     "iopub.status.idle": "2024-08-21T22:26:00.372060Z",
     "shell.execute_reply": "2024-08-21T22:26:00.370984Z"
    },
    "papermill": {
     "duration": 0.031131,
     "end_time": "2024-08-21T22:26:00.374445",
     "exception": false,
     "start_time": "2024-08-21T22:26:00.343314",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer ID</th>\n",
       "      <th>Customer Name</th>\n",
       "      <th>Purchase Date</th>\n",
       "      <th>Purchase Year</th>\n",
       "      <th>Purchase Month</th>\n",
       "      <th>Product Category</th>\n",
       "      <th>Product Price</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>Total Price</th>\n",
       "      <th>Payment Method</th>\n",
       "      <th>Returns</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Customer Age</th>\n",
       "      <th>Churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>44605</td>\n",
       "      <td>John Rivera</td>\n",
       "      <td>2023-05-03 21:30:02</td>\n",
       "      <td>2023</td>\n",
       "      <td>May</td>\n",
       "      <td>Home</td>\n",
       "      <td>177</td>\n",
       "      <td>1</td>\n",
       "      <td>177</td>\n",
       "      <td>PayPal</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>44605</td>\n",
       "      <td>John Rivera</td>\n",
       "      <td>2021-05-16 13:57:44</td>\n",
       "      <td>2021</td>\n",
       "      <td>May</td>\n",
       "      <td>Electronics</td>\n",
       "      <td>174</td>\n",
       "      <td>3</td>\n",
       "      <td>522</td>\n",
       "      <td>PayPal</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>44605</td>\n",
       "      <td>John Rivera</td>\n",
       "      <td>2020-07-13 06:16:57</td>\n",
       "      <td>2020</td>\n",
       "      <td>July</td>\n",
       "      <td>Books</td>\n",
       "      <td>413</td>\n",
       "      <td>1</td>\n",
       "      <td>413</td>\n",
       "      <td>Credit Card</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>44605</td>\n",
       "      <td>John Rivera</td>\n",
       "      <td>2023-01-17 13:14:36</td>\n",
       "      <td>2023</td>\n",
       "      <td>January</td>\n",
       "      <td>Electronics</td>\n",
       "      <td>396</td>\n",
       "      <td>3</td>\n",
       "      <td>1188</td>\n",
       "      <td>Cash</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>44605</td>\n",
       "      <td>John Rivera</td>\n",
       "      <td>2021-05-01 11:29:27</td>\n",
       "      <td>2021</td>\n",
       "      <td>May</td>\n",
       "      <td>Books</td>\n",
       "      <td>259</td>\n",
       "      <td>4</td>\n",
       "      <td>1036</td>\n",
       "      <td>PayPal</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Customer ID Customer Name       Purchase Date  Purchase Year  \\\n",
       "0        44605   John Rivera 2023-05-03 21:30:02           2023   \n",
       "1        44605   John Rivera 2021-05-16 13:57:44           2021   \n",
       "2        44605   John Rivera 2020-07-13 06:16:57           2020   \n",
       "3        44605   John Rivera 2023-01-17 13:14:36           2023   \n",
       "4        44605   John Rivera 2021-05-01 11:29:27           2021   \n",
       "\n",
       "  Purchase Month Product Category  Product Price  Quantity  Total Price  \\\n",
       "0            May             Home            177         1          177   \n",
       "1            May      Electronics            174         3          522   \n",
       "2           July            Books            413         1          413   \n",
       "3        January      Electronics            396         3         1188   \n",
       "4            May            Books            259         4         1036   \n",
       "\n",
       "  Payment Method  Returns  Gender  Customer Age  Churn  \n",
       "0         PayPal      1.0  Female            31      0  \n",
       "1         PayPal      1.0  Female            31      0  \n",
       "2    Credit Card      1.0  Female            31      0  \n",
       "3           Cash      0.0  Female            31      0  \n",
       "4         PayPal      1.0  Female            31      0  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "164d4d6a",
   "metadata": {
    "papermill": {
     "duration": 0.00987,
     "end_time": "2024-08-21T22:26:00.394810",
     "exception": false,
     "start_time": "2024-08-21T22:26:00.384940",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Preliminary data analysis\n",
    "We get a summary of all the columns by using describe function to look at the basic statistics like mean, mode, min and max values. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "b5ee7495",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:26:00.417129Z",
     "iopub.status.busy": "2024-08-21T22:26:00.416731Z",
     "iopub.status.idle": "2024-08-21T22:26:00.762617Z",
     "shell.execute_reply": "2024-08-21T22:26:00.761544Z"
    },
    "papermill": {
     "duration": 0.359823,
     "end_time": "2024-08-21T22:26:00.765008",
     "exception": false,
     "start_time": "2024-08-21T22:26:00.405185",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer ID</th>\n",
       "      <th>Customer Name</th>\n",
       "      <th>Purchase Date</th>\n",
       "      <th>Purchase Year</th>\n",
       "      <th>Purchase Month</th>\n",
       "      <th>Product Category</th>\n",
       "      <th>Product Price</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>Total Price</th>\n",
       "      <th>Payment Method</th>\n",
       "      <th>Returns</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Customer Age</th>\n",
       "      <th>Churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>250000.000000</td>\n",
       "      <td>250000</td>\n",
       "      <td>250000</td>\n",
       "      <td>250000.000000</td>\n",
       "      <td>250000</td>\n",
       "      <td>250000</td>\n",
       "      <td>250000.000000</td>\n",
       "      <td>250000.000000</td>\n",
       "      <td>250000.000000</td>\n",
       "      <td>250000</td>\n",
       "      <td>250000.000000</td>\n",
       "      <td>250000</td>\n",
       "      <td>250000.000000</td>\n",
       "      <td>250000.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>NaN</td>\n",
       "      <td>39878</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>12</td>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Michael Johnson</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>August</td>\n",
       "      <td>Electronics</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Credit Card</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>NaN</td>\n",
       "      <td>119</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>23160</td>\n",
       "      <td>62630</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>83547</td>\n",
       "      <td>NaN</td>\n",
       "      <td>125676</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>25017.632092</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-11-06 19:26:22.286192384</td>\n",
       "      <td>2021.377136</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>254.742724</td>\n",
       "      <td>3.004936</td>\n",
       "      <td>765.954660</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.405904</td>\n",
       "      <td>NaN</td>\n",
       "      <td>43.798276</td>\n",
       "      <td>0.20052</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2020-01-01 00:07:26</td>\n",
       "      <td>2020.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>12590.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2020-12-03 08:10:12</td>\n",
       "      <td>2020.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>132.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>288.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>25011.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-11-06 07:39:08.500000</td>\n",
       "      <td>2021.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>255.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>604.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>37441.250000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2022-10-11 01:21:56.249999872</td>\n",
       "      <td>2022.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>377.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1135.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>57.000000</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>50000.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2023-09-13 18:42:49</td>\n",
       "      <td>2023.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>500.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>2500.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>70.000000</td>\n",
       "      <td>1.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>14412.515718</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.074712</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>141.738104</td>\n",
       "      <td>1.414737</td>\n",
       "      <td>593.494204</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.491067</td>\n",
       "      <td>NaN</td>\n",
       "      <td>15.364915</td>\n",
       "      <td>0.40039</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Customer ID    Customer Name                  Purchase Date  \\\n",
       "count   250000.000000           250000                         250000   \n",
       "unique            NaN            39878                            NaN   \n",
       "top               NaN  Michael Johnson                            NaN   \n",
       "freq              NaN              119                            NaN   \n",
       "mean     25017.632092              NaN  2021-11-06 19:26:22.286192384   \n",
       "min          1.000000              NaN            2020-01-01 00:07:26   \n",
       "25%      12590.000000              NaN            2020-12-03 08:10:12   \n",
       "50%      25011.000000              NaN     2021-11-06 07:39:08.500000   \n",
       "75%      37441.250000              NaN  2022-10-11 01:21:56.249999872   \n",
       "max      50000.000000              NaN            2023-09-13 18:42:49   \n",
       "std      14412.515718              NaN                            NaN   \n",
       "\n",
       "        Purchase Year Purchase Month Product Category  Product Price  \\\n",
       "count   250000.000000         250000           250000  250000.000000   \n",
       "unique            NaN             12                4            NaN   \n",
       "top               NaN         August      Electronics            NaN   \n",
       "freq              NaN          23160            62630            NaN   \n",
       "mean      2021.377136            NaN              NaN     254.742724   \n",
       "min       2020.000000            NaN              NaN      10.000000   \n",
       "25%       2020.000000            NaN              NaN     132.000000   \n",
       "50%       2021.000000            NaN              NaN     255.000000   \n",
       "75%       2022.000000            NaN              NaN     377.000000   \n",
       "max       2023.000000            NaN              NaN     500.000000   \n",
       "std          1.074712            NaN              NaN     141.738104   \n",
       "\n",
       "             Quantity    Total Price Payment Method        Returns  Gender  \\\n",
       "count   250000.000000  250000.000000         250000  250000.000000  250000   \n",
       "unique            NaN            NaN              3            NaN       2   \n",
       "top               NaN            NaN    Credit Card            NaN    Male   \n",
       "freq              NaN            NaN          83547            NaN  125676   \n",
       "mean         3.004936     765.954660            NaN       0.405904     NaN   \n",
       "min          1.000000      10.000000            NaN       0.000000     NaN   \n",
       "25%          2.000000     288.000000            NaN       0.000000     NaN   \n",
       "50%          3.000000     604.000000            NaN       0.000000     NaN   \n",
       "75%          4.000000    1135.000000            NaN       1.000000     NaN   \n",
       "max          5.000000    2500.000000            NaN       1.000000     NaN   \n",
       "std          1.414737     593.494204            NaN       0.491067     NaN   \n",
       "\n",
       "         Customer Age         Churn  \n",
       "count   250000.000000  250000.00000  \n",
       "unique            NaN           NaN  \n",
       "top               NaN           NaN  \n",
       "freq              NaN           NaN  \n",
       "mean        43.798276       0.20052  \n",
       "min         18.000000       0.00000  \n",
       "25%         30.000000       0.00000  \n",
       "50%         44.000000       0.00000  \n",
       "75%         57.000000       0.00000  \n",
       "max         70.000000       1.00000  \n",
       "std         15.364915       0.40039  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe(include='all')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "7e3bda46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:26:00.788171Z",
     "iopub.status.busy": "2024-08-21T22:26:00.787223Z",
     "iopub.status.idle": "2024-08-21T22:26:00.967603Z",
     "shell.execute_reply": "2024-08-21T22:26:00.966308Z"
    },
    "papermill": {
     "duration": 0.195343,
     "end_time": "2024-08-21T22:26:00.970950",
     "exception": false,
     "start_time": "2024-08-21T22:26:00.775607",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Calculate gender distribution\n",
    "gender_distribution = df['Gender'].value_counts()\n",
    "\n",
    "# Create a pie chart for gender distribution\n",
    "plt.figure(figsize=(4, 4))\n",
    "plt.pie(gender_distribution, labels=gender_distribution.index, autopct='%1.1f%%', startangle=140)\n",
    "plt.title('Gender Distribution')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "c6cbfff1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:26:01.010248Z",
     "iopub.status.busy": "2024-08-21T22:26:01.008554Z",
     "iopub.status.idle": "2024-08-21T22:26:01.017482Z",
     "shell.execute_reply": "2024-08-21T22:26:01.015964Z"
    },
    "papermill": {
     "duration": 0.031645,
     "end_time": "2024-08-21T22:26:01.020623",
     "exception": false,
     "start_time": "2024-08-21T22:26:00.988978",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total Revenue: $191488665.00\n"
     ]
    }
   ],
   "source": [
    "# Calculate total revenue\n",
    "total_revenue = df['Total Price'].sum()\n",
    "print(f'Total Revenue: ${total_revenue:.2f}')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7c36672b",
   "metadata": {
    "papermill": {
     "duration": 0.010381,
     "end_time": "2024-08-21T22:26:01.048203",
     "exception": false,
     "start_time": "2024-08-21T22:26:01.037822",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Churn Calculation \n",
    "##### 1. Churn by Gender: \n",
    "Now, I will calculate the churn rate based on gender, which shows that females have a slightly higher rate of churn than men."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "27cd2c12",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:26:01.071388Z",
     "iopub.status.busy": "2024-08-21T22:26:01.071011Z",
     "iopub.status.idle": "2024-08-21T22:26:01.439056Z",
     "shell.execute_reply": "2024-08-21T22:26:01.437950Z"
    },
    "papermill": {
     "duration": 0.382814,
     "end_time": "2024-08-21T22:26:01.441744",
     "exception": false,
     "start_time": "2024-08-21T22:26:01.058930",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Gender\n",
      "Female    20.162640\n",
      "Male      19.942551\n",
      "Name: Churn, dtype: float64\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Group by gender and calculate churn rate\n",
    "churn_by_gender = df.groupby(['Gender'])['Churn'].mean() * 100\n",
    "\n",
    "print(churn_by_gender)\n",
    "\n",
    "# Create a bar chart\n",
    "plt.figure(figsize=(4, 4))\n",
    "churn_by_gender.plot(kind='bar')\n",
    "\n",
    "# Add labels and title\n",
    "plt.xlabel('Gender')\n",
    "plt.ylabel('Churn Rate (%)')\n",
    "plt.title('Churn Rate by Gender')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e7527777",
   "metadata": {
    "papermill": {
     "duration": 0.011256,
     "end_time": "2024-08-21T22:26:01.464528",
     "exception": false,
     "start_time": "2024-08-21T22:26:01.453272",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "##### 2. Churn by Gender and Age \n",
    "Once we know the churn rate by gender, we will also see the churn rate based on age group, and hence we group the customers based on their age and see which age group is more likely to churn. Based on the graph, we see that younger age group i.e. below 30 are more likely to churn. They need to be kept happier by the service and they are more likely to explore other plans and options."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "b81cca05",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:26:01.489698Z",
     "iopub.status.busy": "2024-08-21T22:26:01.489243Z",
     "iopub.status.idle": "2024-08-21T22:26:01.925327Z",
     "shell.execute_reply": "2024-08-21T22:26:01.923584Z"
    },
    "papermill": {
     "duration": 0.453292,
     "end_time": "2024-08-21T22:26:01.929298",
     "exception": false,
     "start_time": "2024-08-21T22:26:01.476006",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 400x400 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Define age groups function\n",
    "def age_group(age):\n",
    "    if age < 30:\n",
    "        return '18-29'\n",
    "    elif age < 40:\n",
    "        return '30-39'\n",
    "    elif age < 50:\n",
    "        return '40-49'\n",
    "    else:\n",
    "        return '50+'\n",
    "\n",
    "# Create age groups column\n",
    "df['Age Group'] = df['Customer Age'].apply(age_group)\n",
    "\n",
    "# Calculate churn by gender and age group\n",
    "churn_by_gender_age = df.groupby(['Gender', 'Age Group'])['Churn'].mean() * 100\n",
    "\n",
    "# Unstack the data for plotting\n",
    "churn_by_gender_age_unstacked = churn_by_gender_age.unstack()\n",
    "\n",
    "# Create the bar plot\n",
    "plt.figure(figsize=(4, 4))\n",
    "churn_by_gender_age_unstacked.plot(kind='bar')\n",
    "plt.xlabel('Age Group')\n",
    "plt.ylabel('Churn Rate (%)')\n",
    "plt.title('Churn Rate by Gender and Age Group')\n",
    "plt.xticks(rotation=0)\n",
    "plt.legend(title='Gender')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3579a732",
   "metadata": {
    "papermill": {
     "duration": 0.014764,
     "end_time": "2024-08-21T22:26:01.957834",
     "exception": false,
     "start_time": "2024-08-21T22:26:01.943070",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "##### 3. Churn per Year\n",
    "We can see the churn rate of customers by year if any specific events in that year have caused churn. From the data we see the year 2020 and 2021 have higher rate of people opting out of the service. This may be affected due to the global pandemic, reducing the services that are not so essential or switching to cheaper options."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "f393dbf6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:26:01.988046Z",
     "iopub.status.busy": "2024-08-21T22:26:01.987639Z",
     "iopub.status.idle": "2024-08-21T22:26:02.136723Z",
     "shell.execute_reply": "2024-08-21T22:26:02.135319Z"
    },
    "papermill": {
     "duration": 0.16741,
     "end_time": "2024-08-21T22:26:02.140212",
     "exception": false,
     "start_time": "2024-08-21T22:26:01.972802",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Purchase Year\n",
      "2020    20.112136\n",
      "2021    20.088127\n",
      "2022    19.946734\n",
      "2023    20.064780\n",
      "Name: Churn, dtype: float64\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Claculate churn rate by year\n",
    "churn_by_purchase_year = df.groupby('Purchase Year')['Churn'].mean() * 100\n",
    "print(churn_by_purchase_year)\n",
    "\n",
    "plt.figure(figsize=(4, 4))\n",
    "plt.pie(churn_by_purchase_year, labels=churn_by_purchase_year.index, autopct='%1.1f%%', colors=plt.cm.Paired.colors)\n",
    "\n",
    "# Adding title\n",
    "plt.title('Churn Rate Distribution by Purchase year', fontsize=16)\n",
    "\n",
    "# Display the pie chart\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "511a98d3",
   "metadata": {
    "papermill": {
     "duration": 0.020266,
     "end_time": "2024-08-21T22:26:02.181480",
     "exception": false,
     "start_time": "2024-08-21T22:26:02.161214",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "##### 4. Churn by product categories\n",
    "We can look at which categories of products are people opting out from which can be seen in the pie chart and it seems every category has the same rate of churn but a slightly higher churn is seen in clothing."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "cebb3116",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:26:02.216252Z",
     "iopub.status.busy": "2024-08-21T22:26:02.215872Z",
     "iopub.status.idle": "2024-08-21T22:26:02.356824Z",
     "shell.execute_reply": "2024-08-21T22:26:02.355644Z"
    },
    "papermill": {
     "duration": 0.15789,
     "end_time": "2024-08-21T22:26:02.360097",
     "exception": false,
     "start_time": "2024-08-21T22:26:02.202207",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Product Category\n",
      "Books          20.079683\n",
      "Clothing       20.122721\n",
      "Electronics    20.043110\n",
      "Home           19.962585\n",
      "Name: Churn, dtype: float64\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Calculate churn rate by product category\n",
    "churn_by_product_category = df.groupby('Product Category')['Churn'].mean() * 100\n",
    "print(churn_by_product_category)\n",
    "\n",
    "plt.figure(figsize=(4, 4))\n",
    "plt.pie(churn_by_product_category, labels=churn_by_product_category.index, autopct='%1.1f%%', colors=plt.cm.Paired.colors)\n",
    "\n",
    "# Adding title\n",
    "plt.title('Churn Rate Distribution by Product Category', fontsize=16)\n",
    "\n",
    "# Display the pie chart\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e5d0d782",
   "metadata": {
    "papermill": {
     "duration": 0.021239,
     "end_time": "2024-08-21T22:26:02.403055",
     "exception": false,
     "start_time": "2024-08-21T22:26:02.381816",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "##### 5. Churn by payment method\n",
    "We see that all three payment methods have almost equal churn rate but a slightly higher churn is seen in cash and lowest churn by credit card whic means the convenience of automatic paymnets leads t lower churn rate. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "54179fe2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:26:02.445509Z",
     "iopub.status.busy": "2024-08-21T22:26:02.445096Z",
     "iopub.status.idle": "2024-08-21T22:26:02.594272Z",
     "shell.execute_reply": "2024-08-21T22:26:02.592761Z"
    },
    "papermill": {
     "duration": 0.175462,
     "end_time": "2024-08-21T22:26:02.600162",
     "exception": false,
     "start_time": "2024-08-21T22:26:02.424700",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Payment Method\n",
      "Cash           20.252494\n",
      "Credit Card    19.661987\n",
      "PayPal         20.243046\n",
      "Name: Churn, dtype: float64\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Calculate churn rate by payment method\n",
    "churn_by_payment_method = df.groupby('Payment Method')['Churn'].mean() * 100\n",
    "print(churn_by_payment_method)\n",
    "\n",
    "plt.figure(figsize=(4, 4))\n",
    "plt.pie(churn_by_payment_method, labels=churn_by_payment_method.index, autopct='%1.1f%%', colors=plt.cm.Paired.colors)\n",
    "\n",
    "# Adding title\n",
    "plt.title('Churn Rate Distribution by Payment Method', fontsize=16)\n",
    "\n",
    "# Display the pie chart\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "86acbb30",
   "metadata": {
    "papermill": {
     "duration": 0.022754,
     "end_time": "2024-08-21T22:26:02.645860",
     "exception": false,
     "start_time": "2024-08-21T22:26:02.623106",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### CLTV Calculation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "10f826eb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:26:02.681233Z",
     "iopub.status.busy": "2024-08-21T22:26:02.680861Z",
     "iopub.status.idle": "2024-08-21T22:26:02.841665Z",
     "shell.execute_reply": "2024-08-21T22:26:02.840204Z"
    },
    "papermill": {
     "duration": 0.178297,
     "end_time": "2024-08-21T22:26:02.844187",
     "exception": false,
     "start_time": "2024-08-21T22:26:02.665890",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        Customer ID      Customer Name       Purchase Date  Purchase Year  \\\n",
      "0             44605        John Rivera 2023-05-03 21:30:02           2023   \n",
      "1             44605        John Rivera 2021-05-16 13:57:44           2021   \n",
      "2             44605        John Rivera 2020-07-13 06:16:57           2020   \n",
      "3             44605        John Rivera 2023-01-17 13:14:36           2023   \n",
      "4             44605        John Rivera 2021-05-01 11:29:27           2021   \n",
      "...             ...                ...                 ...            ...   \n",
      "249995        33807   Gabriel Williams 2023-01-24 12:32:18           2023   \n",
      "249996        20455       Barry Foster 2021-06-04 05:45:25           2021   \n",
      "249997        28055       Lisa Johnson 2022-11-10 17:11:57           2022   \n",
      "249998        15023  Melissa Fernandez 2021-06-27 14:42:12           2021   \n",
      "249999         4148      Angela Norton 2020-09-07 05:12:19           2020   \n",
      "\n",
      "       Purchase Month Product Category  Product Price  Quantity  Total Price  \\\n",
      "0                 May             Home            177         1          177   \n",
      "1                 May      Electronics            174         3          522   \n",
      "2                July            Books            413         1          413   \n",
      "3             January      Electronics            396         3         1188   \n",
      "4                 May            Books            259         4         1036   \n",
      "...               ...              ...            ...       ...          ...   \n",
      "249995        January             Home            436         1          436   \n",
      "249996           June      Electronics            233         1          233   \n",
      "249997       November      Electronics            441         5         2205   \n",
      "249998           June      Electronics             44         2           88   \n",
      "249999      September             Home            307         5         1535   \n",
      "\n",
      "       Payment Method  Returns  Gender  Customer Age  Churn Age Group  \\\n",
      "0              PayPal      1.0  Female            31      0     30-39   \n",
      "1              PayPal      1.0  Female            31      0     30-39   \n",
      "2         Credit Card      1.0  Female            31      0     30-39   \n",
      "3                Cash      0.0  Female            31      0     30-39   \n",
      "4              PayPal      1.0  Female            31      0     30-39   \n",
      "...               ...      ...     ...           ...    ...       ...   \n",
      "249995           Cash      0.0    Male            63      0       50+   \n",
      "249996    Credit Card      1.0  Female            66      0       50+   \n",
      "249997           Cash      0.0  Female            63      0       50+   \n",
      "249998           Cash      1.0    Male            64      0       50+   \n",
      "249999           Cash      0.0    Male            32      0     30-39   \n",
      "\n",
      "                CLTV  \n",
      "0       16636.744464  \n",
      "1       16636.744464  \n",
      "2       16636.744464  \n",
      "3       16636.744464  \n",
      "4       16636.744464  \n",
      "...              ...  \n",
      "249995   2174.346699  \n",
      "249996   1161.978855  \n",
      "249997  10996.409336  \n",
      "249998    438.858967  \n",
      "249999   7655.096748  \n",
      "\n",
      "[250000 rows x 16 columns]\n"
     ]
    }
   ],
   "source": [
    "# Step 1: Calculate total revenue and purchase frequency by customer\n",
    "customer_revenue = df.groupby('Customer ID')['Total Price'].sum()\n",
    "purchase_frequency = df.groupby('Customer ID')['Purchase Date'].count()\n",
    "\n",
    "# Combine these into a DataFrame\n",
    "customer_df = pd.DataFrame({\n",
    "    'Total Revenue': customer_revenue,\n",
    "    'Purchase Frequency': purchase_frequency\n",
    "})\n",
    "\n",
    "# Step 2: Calculate average purchase value per customer\n",
    "customer_df['Average Purchase Value'] = customer_df['Total Revenue'] / customer_df['Purchase Frequency']\n",
    "\n",
    "# Step 3: Calculate customer value (using Total Revenue as an example)\n",
    "customer_df['Customer Value'] = customer_df['Total Revenue']\n",
    "\n",
    "# Step 4: Calculate churn rate and average customer lifespan\n",
    "churn_rate = df['Churn'].mean()\n",
    "average_customer_lifespan = 1 / churn_rate\n",
    "\n",
    "# Step 5: Calculate CLTV\n",
    "customer_df['CLTV'] = customer_df['Customer Value'] * average_customer_lifespan\n",
    "\n",
    "# Step 6: Merge the CLTV back to the original DataFrame, avoiding duplication\n",
    "if 'CLTV' in df.columns:\n",
    "    df = df.drop(columns=['CLTV'])  # Drop the existing CLTV column if it exists\n",
    "\n",
    "df = df.merge(customer_df[['CLTV']], left_on='Customer ID', right_index=True, how='left')\n",
    "\n",
    "# Display the updated DataFrame with the new CLTV values\n",
    "print(df)\n",
    "#print(customer_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "c7b74cda",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:26:02.873671Z",
     "iopub.status.busy": "2024-08-21T22:26:02.873273Z",
     "iopub.status.idle": "2024-08-21T22:26:02.882703Z",
     "shell.execute_reply": "2024-08-21T22:26:02.881578Z"
    },
    "papermill": {
     "duration": 0.027034,
     "end_time": "2024-08-21T22:26:02.885214",
     "exception": false,
     "start_time": "2024-08-21T22:26:02.858180",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        Customer ID          CLTV\n",
      "0             44605  16636.744464\n",
      "1             44605  16636.744464\n",
      "2             44605  16636.744464\n",
      "3             44605  16636.744464\n",
      "4             44605  16636.744464\n",
      "...             ...           ...\n",
      "249995        33807   2174.346699\n",
      "249996        20455   1161.978855\n",
      "249997        28055  10996.409336\n",
      "249998        15023    438.858967\n",
      "249999         4148   7655.096748\n",
      "\n",
      "[250000 rows x 2 columns]\n"
     ]
    }
   ],
   "source": [
    "print(df[['Customer ID', 'CLTV']])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6f1051e5",
   "metadata": {
    "papermill": {
     "duration": 0.013443,
     "end_time": "2024-08-21T22:26:02.912621",
     "exception": false,
     "start_time": "2024-08-21T22:26:02.899178",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Customer Segmentation Analysis\n",
    "\n",
    "We will identify the customer segments based on the recency, frequence and monetory factors also known as RFM analysis where customers will be ranked by each factor and an overall score to be seprataed and categorized in a segment. This information is helpful for service providers to understand their customer's purchasing amount, frequesnt shoppers and how to create an incentives based on these factors that bring profit to the company."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "4ccf77d8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:26:02.999712Z",
     "iopub.status.busy": "2024-08-21T22:26:02.999012Z",
     "iopub.status.idle": "2024-08-21T22:26:03.164382Z",
     "shell.execute_reply": "2024-08-21T22:26:03.163191Z"
    },
    "papermill": {
     "duration": 0.241327,
     "end_time": "2024-08-21T22:26:03.167761",
     "exception": false,
     "start_time": "2024-08-21T22:26:02.926434",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     Customer ID  Recency  Frequency  Monetary   R_rank   F_rank   M_rank  \\\n",
      "0          44605      476          5      3336  30214.5  26093.5  22595.0   \n",
      "5          13738      393          5      2812  41184.0  26093.5  17530.0   \n",
      "10         33969      399          7      5440  40273.0  40459.0  38982.0   \n",
      "17         42650      479         13      4507  29872.0  49593.5  32780.0   \n",
      "30         24053      714          5      2737  12375.5  26093.5  16782.5   \n",
      "35         19676      783          5      4162   9525.5  26093.5  29932.5   \n",
      "40         19917      463          4      2842  31763.0  17245.5  17839.5   \n",
      "44         16051      855          9      4688   7209.5  47162.5  34132.5   \n",
      "53         23734      700          4      1628  13005.0  17245.5   7246.0   \n",
      "57         16921      575          6      2558  20891.5  34187.5  15088.5   \n",
      "63          7796      669          4      2473  14629.5  17245.5  14301.0   \n",
      "67         21035      347          7      3819  48845.5  40459.0  26925.5   \n",
      "74         37125      630          3      2289  16947.5   9331.0  12609.5   \n",
      "77         41840      347         10      8909  48845.5  48522.0  48566.0   \n",
      "87          2642      887          5      1868   6352.5  26093.5   9033.5   \n",
      "92          1254      372          2      2541  44414.0   3734.0  14919.5   \n",
      "94         13389      362          9      6334  46146.5  47162.5  43208.0   \n",
      "103        24473      456          5      3881  32606.5  26093.5  27483.5   \n",
      "108        11230      410          6      3199  38666.5  34187.5  21213.0   \n",
      "114        24741      683          6      4017  13880.0  34187.5  28674.0   \n",
      "120        10191      550         11      9976  22963.5  49171.5  49208.0   \n",
      "131         6829     1436          4      1735    556.0  17245.5   8008.0   \n",
      "135        16825      522          5      3632  25540.0  26093.5  25279.0   \n",
      "140        18467      470          9      7137  30904.0  47162.5  45745.5   \n",
      "149        34857      434          8      4216  35353.5  44674.5  30370.0   \n",
      "157        21801      717          4      3165  12237.5  17245.5  20894.0   \n",
      "161        11769      508          2      1128  26889.0   3734.0   4011.5   \n",
      "163        22193      588          5      4163  19894.5  26093.5  29941.0   \n",
      "168         7340      414          6      5881  38074.5  34187.5  41253.0   \n",
      "174        31538      491          7      7534  28591.0  40459.0  46666.5   \n",
      "181        33511      405          7      4868  39379.0  40459.0  35371.5   \n",
      "188         5952      560          5      1827  22085.0  26093.5   8682.0   \n",
      "193        48449      751          6      2199  10763.0  34187.5  11759.0   \n",
      "199        17203      377          6      5608  43630.5  34187.5  39909.0   \n",
      "205         2695      370          8      8220  44771.0  44674.5  47811.0   \n",
      "213        15079      343          7      5050  49584.0  40459.0  36589.5   \n",
      "220        21450      434          7      4475  35353.5  40459.0  32516.5   \n",
      "227        11738      350          4      1604  48328.5  17245.5   7036.5   \n",
      "231        15595      683          7      8674  13880.0  40459.0  48345.0   \n",
      "238        44311      527          8      7471  25067.5  44674.5  46533.5   \n",
      "246        31852      753          3      2982  10693.5   9331.0  19115.0   \n",
      "249        46881      697          5      2552  13147.5  26093.5  15042.5   \n",
      "254        14652      706         11     11059  12741.5  49171.5  49493.0   \n",
      "265          835      570          5      2817  21250.5  26093.5  17591.5   \n",
      "270        26275      347          4      2378  48845.5  17245.5  13422.5   \n",
      "274        37795      404          6      4274  39524.5  34187.5  30863.0   \n",
      "280         4553      551          6      6045  22866.5  34187.5  42017.5   \n",
      "286         6656      352          7      7142  47960.0  40459.0  45757.5   \n",
      "293        45727      470          8      8502  30904.0  44674.5  48149.0   \n",
      "301         5243      442          6      4366  34326.0  34187.5  31659.0   \n",
      "\n",
      "        RFM_Score     Segment  \n",
      "0    26301.000000  High Value  \n",
      "5    28269.166667  High Value  \n",
      "10   39904.666667   Top Value  \n",
      "17   37415.166667   Top Value  \n",
      "30   18417.166667   Mid Value  \n",
      "35   21850.500000   Mid Value  \n",
      "40   22282.666667   Mid Value  \n",
      "44   29501.500000  High Value  \n",
      "53   12498.833333   Low Value  \n",
      "57   23389.166667   Mid Value  \n",
      "63   15392.000000   Low Value  \n",
      "67   38743.333333   Top Value  \n",
      "74   12962.666667   Low Value  \n",
      "77   48644.500000   Top Value  \n",
      "87   13826.500000   Low Value  \n",
      "92   21022.500000   Mid Value  \n",
      "94   45505.666667   Top Value  \n",
      "103  28727.833333  High Value  \n",
      "108  31355.666667  High Value  \n",
      "114  25580.500000  High Value  \n",
      "120  40447.666667   Top Value  \n",
      "131   8603.166667   Low Value  \n",
      "135  25637.500000  High Value  \n",
      "140  41270.666667   Top Value  \n",
      "149  36799.333333   Top Value  \n",
      "157  16792.333333   Mid Value  \n",
      "161  11544.833333   Low Value  \n",
      "163  25309.666667  High Value  \n",
      "168  37838.333333   Top Value  \n",
      "174  38572.166667   Top Value  \n",
      "181  38403.166667   Top Value  \n",
      "188  18953.500000   Mid Value  \n",
      "193  18903.166667   Mid Value  \n",
      "199  39242.333333   Top Value  \n",
      "205  45752.166667   Top Value  \n",
      "213  42210.833333   Top Value  \n",
      "220  36109.666667   Top Value  \n",
      "227  24203.500000   Mid Value  \n",
      "231  34228.000000   Top Value  \n",
      "238  38758.500000   Top Value  \n",
      "246  13046.500000   Low Value  \n",
      "249  18094.500000   Mid Value  \n",
      "254  37135.333333   Top Value  \n",
      "265  21645.166667   Mid Value  \n",
      "270  26504.500000  High Value  \n",
      "274  34858.333333   Top Value  \n",
      "280  33023.833333  High Value  \n",
      "286  44725.500000   Top Value  \n",
      "293  41242.500000   Top Value  \n",
      "301  33390.833333  High Value  \n"
     ]
    }
   ],
   "source": [
    "#Customer segmentation analysis based on Recency, Frequency and Monetory factors\n",
    "# Recency: Calculate days since the last purchase for each customer\n",
    "from datetime import datetime\n",
    "\n",
    "df['Purchase Date'] = pd.to_datetime(df['Purchase Date'])\n",
    "\n",
    "df['Recency'] = (datetime.now() - df.groupby('Customer ID')['Purchase Date'].transform('max')).dt.days\n",
    "\n",
    "# Frequency: Count the number of purchases per customer\n",
    "df['Frequency'] = df.groupby('Customer ID')['Purchase Date'].transform('count')\n",
    "\n",
    "# Monetary: Sum the total purchase amount per customer\n",
    "df['Monetary'] = df.groupby('Customer ID')['Total Price'].transform('sum')\n",
    "\n",
    "# Create an RFM DataFrame\n",
    "rfm_df = df[['Customer ID', 'Recency', 'Frequency', 'Monetary']].drop_duplicates()\n",
    "\n",
    "# Rank customers based on Recency, Frequency, and Monetary values\n",
    "rfm_df['R_rank'] = rfm_df['Recency'].rank(ascending=False)\n",
    "rfm_df['F_rank'] = rfm_df['Frequency'].rank(ascending=True)\n",
    "rfm_df['M_rank'] = rfm_df['Monetary'].rank(ascending=True)\n",
    "\n",
    "# Combine RFM scores into a single score\n",
    "rfm_df['RFM_Score'] = rfm_df[['R_rank', 'F_rank', 'M_rank']].mean(axis=1)\n",
    "\n",
    "# Segment customers based on RFM score\n",
    "rfm_df['Segment'] = pd.qcut(rfm_df['RFM_Score'], q=4, labels=['Low Value', 'Mid Value', 'High Value', 'Top Value'])\n",
    "\n",
    "print(rfm_df.head(50))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8f9d9f31",
   "metadata": {
    "papermill": {
     "duration": 0.013983,
     "end_time": "2024-08-21T22:26:03.196140",
     "exception": false,
     "start_time": "2024-08-21T22:26:03.182157",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Summary stats for each segment based on our RFM analysis. \n",
    "We see that this data has equal number of customers in each segment which is surprising."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "b20707a1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:26:03.227072Z",
     "iopub.status.busy": "2024-08-21T22:26:03.226674Z",
     "iopub.status.idle": "2024-08-21T22:26:03.244250Z",
     "shell.execute_reply": "2024-08-21T22:26:03.243223Z"
    },
    "papermill": {
     "duration": 0.036539,
     "end_time": "2024-08-21T22:26:03.247500",
     "exception": false,
     "start_time": "2024-08-21T22:26:03.210961",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "            Customer Count     Recency  Frequency     Monetary\n",
      "Segment                                                       \n",
      "Low Value            12416  860.875161   2.688547  1733.174694\n",
      "Mid Value            12415  597.962143   4.214337  3017.162867\n",
      "High Value           12415  524.120822   5.614337  4331.162384\n",
      "Top Value            12415  434.987676   7.619493  6342.336689\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_18/2113274549.py:2: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n",
      "  segment_summary = rfm_df.groupby('Segment').agg({\n"
     ]
    }
   ],
   "source": [
    "# Summary statistics for each segment\n",
    "segment_summary = rfm_df.groupby('Segment').agg({\n",
    "    'Customer ID': 'count',\n",
    "    'Recency': 'mean',\n",
    "    'Frequency': 'mean',\n",
    "    'Monetary': 'mean'\n",
    "}).rename(columns={'Customer ID': 'Customer Count'})\n",
    "\n",
    "print(segment_summary)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "d8de8ae7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:26:03.278154Z",
     "iopub.status.busy": "2024-08-21T22:26:03.277461Z",
     "iopub.status.idle": "2024-08-21T22:26:03.515026Z",
     "shell.execute_reply": "2024-08-21T22:26:03.513634Z"
    },
    "papermill": {
     "duration": 0.255496,
     "end_time": "2024-08-21T22:26:03.517340",
     "exception": false,
     "start_time": "2024-08-21T22:26:03.261844",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/seaborn/categorical.py:641: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n",
      "  grouped_vals = vals.groupby(grouper)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "plt.figure(figsize=(6, 4))\n",
    "sns.countplot(x='Segment', data=rfm_df, palette='viridis')\n",
    "plt.title('Customer Count by Segment')\n",
    "plt.xlabel('Segment')\n",
    "plt.ylabel('Number of Customers')\n",
    "plt.xticks(rotation=45)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "5e8223b0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:26:03.551665Z",
     "iopub.status.busy": "2024-08-21T22:26:03.550715Z",
     "iopub.status.idle": "2024-08-21T22:26:03.777151Z",
     "shell.execute_reply": "2024-08-21T22:26:03.776098Z"
    },
    "papermill": {
     "duration": 0.246671,
     "end_time": "2024-08-21T22:26:03.779640",
     "exception": false,
     "start_time": "2024-08-21T22:26:03.532969",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/seaborn/categorical.py:641: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n",
      "  grouped_vals = vals.groupby(grouper)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(6, 4))\n",
    "sns.boxplot(x='Segment', y='Monetary', data=rfm_df, palette='viridis')\n",
    "plt.title('Monetary Value by Segment')\n",
    "plt.xlabel('Segment')\n",
    "plt.ylabel('Monetary Value')\n",
    "plt.xticks(rotation=45)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "aafa60cd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-21T22:26:03.813473Z",
     "iopub.status.busy": "2024-08-21T22:26:03.812289Z",
     "iopub.status.idle": "2024-08-21T22:26:04.100237Z",
     "shell.execute_reply": "2024-08-21T22:26:04.099226Z"
    },
    "papermill": {
     "duration": 0.307761,
     "end_time": "2024-08-21T22:26:04.102964",
     "exception": false,
     "start_time": "2024-08-21T22:26:03.795203",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_18/1450426772.py:1: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n",
      "  rfm_heatmap = rfm_df[['R_rank', 'F_rank', 'M_rank', 'Segment']].groupby('Segment').mean().reset_index()\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "rfm_heatmap = rfm_df[['R_rank', 'F_rank', 'M_rank', 'Segment']].groupby('Segment').mean().reset_index()\n",
    "plt.figure(figsize=(6, 4))\n",
    "sns.heatmap(rfm_heatmap.drop('Segment', axis=1), annot=True, fmt=\".1f\", cmap='coolwarm', yticklabels=rfm_heatmap['Segment'])\n",
    "plt.title('Heatmap of Average RFM Scores by Segment')\n",
    "plt.xlabel('RFM Score')\n",
    "plt.ylabel('Segment')\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 3733600,
     "sourceId": 6476628,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30746,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 11.874375,
   "end_time": "2024-08-21T22:26:04.740063",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-08-21T22:25:52.865688",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
